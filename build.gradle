plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.5'
    id 'xyz.jpenilla.run-paper' version "2.3.1"
}

group = 'me.rockquiet'
version = '2.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'

    implementation 'net.kyori:adventure-text-minimessage:4.17.0'
    implementation 'net.kyori:adventure-platform-bukkit:4.3.4'

    implementation 'de.exlll:configlib-yaml:4.5.0'

    implementation 'org.bstats:bstats-bukkit:3.1.0'

    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'io.github.miniplaceholders:miniplaceholders-api:2.2.3'
    compileOnly 'net.luckperms:api:5.4'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

tasks.withType(JavaCompile).configureEach {
    options.release = targetJavaVersion
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier = ''
    minimize()
    enableRelocation = true
    relocationPrefix = 'me.rockquiet.joinprotection.3rdparty'
}

tasks {
    // Paper
    runServer {
        // Integration into other plugins
        /*
        downloadPlugins {
            hangar("PlaceholderAPI", "2.11.6")
            modrinth("MiniPlaceholders", "J2guR3GH") // 2.2.4
            url("https://download.luckperms.net/1556/bukkit/loader/LuckPerms-Bukkit-5.4.141.jar")
        }
         */
        minecraftVersion("1.21.1")
    }
    // Folia
    runPaper.folia.registerTask()
    runFolia {
        runDirectory(file("runFolia"))
        minecraftVersion("1.20.6")
    }
}

void disableStats(DirectoryProperty runDir) {
    def cfg = file(runDir.asFile.getOrElse(file("run")).name + "/plugins/bStats/config.yml")
    if (!cfg.exists()) {
        cfg.parentFile.mkdirs()
        cfg.setText("enabled: false\n", "UTF-8")
    }
}

tasks.runFolia.doFirst { disableStats(runFolia.getRunDirectory()) }
tasks.runServer.doFirst { disableStats(runServer.getRunDirectory()) }